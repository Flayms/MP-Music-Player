# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Build .NET MAUI Windows

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build-project:
    name: Build project
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x
        
    - name: Install MAUI workload
      run: dotnet workload install maui
      
    - name: Build
      run: dotnet build "Music Player Maui/Music Player Maui.csproj" -c Release -f:net7.0-windows10.0.19041.0
    
    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: windows-build
        path: Music Player Maui/bin/Release/net7.0-windows10.0.19041.0/
      
  release-project:
    name: Release Project
    runs-on: windows-latest
    permissions: write-all
    needs: build-project
    steps:
    - name: Download artifact
      uses: actions/download-artifact@v3
      with:
        name: windows-build

    - name: Archive content
      uses: thedoctor0/zip-release@master
      with:
        filename: windows-build.zip #better name

    - name: Create Release
      id: create_release
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "0.1.${{ github.run_number }}"
        prerelease: true
        title: "v0.1.${{ github.run_number }}"

    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./windows-build.zip
        asset_name: windows-build.zip
        asset_content_type: application/zip


   # - name: Create Github Release
   #   uses: ncipollo/release-action@v1.12.0
   #   with:
   #     artifacts: "windows-build.zip"
   #     token: ${{ secrets.GITHUB_TOKEN }}
    
  #   - name: Create GitHub Release
  #    id: create_release
  #    uses: actions/create-release@v1
  #    env:
  #      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} #is provided by action, doesn't need to be manually set
  #    with:
  #      tag_name: ${{ github.run_number }}
  #      release_name: Release ${{ github.run_number }}



